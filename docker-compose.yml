version: "3.9"

services:
  # === Kafka brokers with JMX enabled ===
  kafka1:
    image: bitnami/kafka:latest
    hostname: kafka1
    container_name: kafka1
    environment:
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka1:9092
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_KRAFT_CLUSTER_ID=11111111-1111-1111-1111-111111111111
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka1:9093,2@kafka2:9093,3@kafka3:9093
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_FORCE_BROKER_REFORMAT=yes
      - KAFKA_CFG_JMX_PORT=9999
    ports:
      - "9092:9092"
      - "9093:9093"
    volumes:
      - kafka1_data:/bitnami/kafka
    networks:
      kafka_network:
        aliases: [ kafka1 ]

  kafka2:
    image: bitnami/kafka:latest
    hostname: kafka2
    container_name: kafka2
    environment:
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_NODE_ID=2
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka2:9092
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_KRAFT_CLUSTER_ID=11111111-1111-1111-1111-111111111111
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka1:9093,2@kafka2:9093,3@kafka3:9093
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_FORCE_BROKER_REFORMAT=yes
      - KAFKA_CFG_JMX_PORT=9999
    ports:
      - "9094:9092"
      - "9096:9093"
    volumes:
      - kafka2_data:/bitnami/kafka
    networks:
      kafka_network:
        aliases: [ kafka2 ]

  kafka3:
    image: bitnami/kafka:latest
    hostname: kafka3
    container_name: kafka3
    environment:
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_NODE_ID=3
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka3:9092
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_KRAFT_CLUSTER_ID=11111111-1111-1111-1111-111111111111
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka1:9093,2@kafka2:9093,3@kafka3:9093
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_FORCE_BROKER_REFORMAT=yes
      - KAFKA_CFG_JMX_PORT=9999
    ports:
      - "9095:9092"
      - "9097:9093"
    volumes:
      - kafka3_data:/bitnami/kafka
    networks:
      kafka_network:
        aliases: [ kafka3 ]


  # === Notification Service ===
  notification-service:
    build:
      context: ./api/notifications/notification-service
      dockerfile: src/main/docker/Dockerfile.jvm
    volumes:
      - ./api/notifications/notification-service/credentials/kafka-ccm-dev.json:/deployments/credentials.json:ro
    environment:
      - GOOGLE_APPLICATION_CREDENTIALS=/deployments/credentials.json
      - KAFKA_BOOTSTRAP_SERVERS=kafka1:9092,kafka2:9092,kafka3:9092
    ports:
      - "8083:8080"
    depends_on:
      - kafka1
      - kafka2
      - kafka3
    networks:
      - kafka_network
      - default

  # === Orders API ===
  orders-api:
    build:
      context: ./api/orders/orders-api
      dockerfile: src/main/docker/Dockerfile.jvm
    ports:
      - "8080:8080"
    environment:
      - kafka.bootstrap.servers=kafka1:9092,kafka2:9092,kafka3:9092
    networks:
      - kafka_network
      - default



    # === Inventory Service ===
  inventory-service:
    build:
      context: ./api/inventorys/inventory-service
      dockerfile: src/main/docker/Dockerfile.jvm
      args:
        MAVEN_CLI_OPTS: "-DskipTests"
    ports:
      - "8084:8080"                        # host 8084 â†’ container 8080
    environment:
      - kafka.bootstrap.servers=kafka1:9092,kafka2:9092,kafka3:9092
    depends_on:
      - kafka1
      - kafka2
      - kafka3
    networks:
      - kafka_network
      - default

  # === Frontend ===
  frontend:
    build:
      context: ./frontend
    ports:
      - "3002:80"
    depends_on:
      - orders-api
    networks:
      - default
      - kafka_network

  # === Kafka-UI ===
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8081:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=KafkaKraftCluster
      - KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS=kafka1:9092,kafka2:9092,kafka3:9092
    depends_on:
      - kafka1
      - kafka2
      - kafka3
    networks:
      - kafka_network
      - default

  # === Prometheus ===
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - default

  # === Grafana ===
  grafana:
    image: grafana/grafana:latest
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
      - ./grafana/dashboards:/var/lib/grafana/dashboards:ro
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - default

  # === cAdvisor ===
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    platform: linux/amd64
    ports:
      - "8082:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /:/rootfs:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - default

volumes:
  kafka1_data:
  kafka2_data:
  kafka3_data:
  prometheus_data:
  grafana_data:

networks:
  kafka_network:
    driver: bridge
